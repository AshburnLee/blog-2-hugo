<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pinned Memory on Junhui&#39;s Journal 2</title>
    <link>https://ashburnLee.github.io/blog-2-hugo/tags/pinned-memory/</link>
    <description>Recent content in Pinned Memory on Junhui&#39;s Journal 2</description>
    <generator>Hugo -- 0.149.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Aug 2025 12:45:52 +0800</lastBuildDate>
    <atom:link href="https://ashburnLee.github.io/blog-2-hugo/tags/pinned-memory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Memory Pinned</title>
      <link>https://ashburnLee.github.io/blog-2-hugo/cuda-notes/memory-pinned/</link>
      <pubDate>Sun, 31 Aug 2025 12:45:52 +0800</pubDate>
      <guid>https://ashburnLee.github.io/blog-2-hugo/cuda-notes/memory-pinned/</guid>
      <description>&lt;h2 id=&#34;pinned-memory-aka-page-locked-memory&#34;&gt;Pinned Memory (AKA page-locked memory)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pinned Memory，也称为&lt;strong&gt;页锁定内存&lt;/strong&gt;，是一种特殊的内存分配方式，&lt;strong&gt;它确保内存始终驻留在物理内存中，不会被操作系统分页或交换到磁盘上&lt;/strong&gt;。这种内存分配方式对于需要&lt;strong&gt;频繁访问的内存区域&lt;/strong&gt;非常有用，因为它可以提高数据传输的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pageable Memory，也称为可分页内存，是由操作系统 API（如 &lt;code&gt;malloc()&lt;/code&gt; ）在主机上分配的内存。这种内存可以被操作系统分页和交换到磁盘上，以释放物理内存供其他程序使用。Pageable memory 的优点是可以更有效地利用物理内存，但在数据传输时可能会受到限制，因为数据可能需要先从磁盘加载到内存中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pinned memory 和 pageable memory 主要关注的是 CPU 内存&lt;strong&gt;如何被操作系统管理以及是否可以被分页到磁盘&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;当使用 pinned 内存时，操作系统会将内存块标记为“固定”，这意味着该内存块不会被分页或交换到磁盘上。这种固定的内存块可以被硬件设备（如 GPU）直接访问，从而实现更快的数据传输。&lt;/p&gt;
&lt;h2 id=&#34;异步实现-device-计算和数据传输时host-必须是-pinned-memory&#34;&gt;异步实现 device 计算和数据传输时，host 必须是 pinned memory.&lt;/h2&gt;
&lt;p&gt;CUDA 等 GPU 计算框架使用 DMA 来高效地将数据从主机内存传输到 Device 内存，DMA 是一种允许硬件直接访问内存的机制，无需 CPU 的干预，从而显著提高数据传输速度。然而，标准的系统内存（分页内存）可能会被操作系统分页到磁盘上。如果在 DMA 传输过程中，操作系统将主机内存页面交换到磁盘，DMA 就会失败，就是GPU直接访问不到了。&lt;/p&gt;
&lt;p&gt;Pinned memory，也称为固定内存或页面锁定内存，是一种特殊的内存区域，操作系统保证其始终驻留在物理内存中，不会被分页到磁盘。因此，使用 Pinned memory 进行异步数据传输可以确保 DMA 传输的可靠性和效率。&lt;/p&gt;
&lt;p&gt;当异步地将数据从主机复制到设备时，CUDA 运行时可以立即启动 DMA 传输，而无需等待 CPU 。在数据传输完成之前，CPU 可以继续执行其他任务，从而实现真正的异步操作。&lt;/p&gt;
&lt;p&gt;简而言之，Pinned memory 保证了&lt;strong&gt;内存的连续性和稳定性&lt;/strong&gt;，避免了异步 DMA 传输过程中可能出现的页面错误，从而确保了异步数据传输的可靠性和效率。&lt;/p&gt;
&lt;p&gt;C++ 中，直接使用 &lt;code&gt;new&lt;/code&gt; 或 &lt;code&gt;malloc&lt;/code&gt; 等标准库函数开辟内存空间时，不会自动区分 pinned 内存和 pageable 内存。 这些函数分配的是默认的可分页内存 (pageable memory)。***&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
