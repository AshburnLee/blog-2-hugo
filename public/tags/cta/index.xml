<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CTA on Junhui&#39;s Journal 2</title>
    <link>https://ashburnLee.github.io/blog-2-hugo/tags/cta/</link>
    <description>Recent content in CTA on Junhui&#39;s Journal 2</description>
    <generator>Hugo -- 0.149.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Aug 2025 12:45:56 +0800</lastBuildDate>
    <atom:link href="https://ashburnLee.github.io/blog-2-hugo/tags/cta/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>概念 CTA Block</title>
      <link>https://ashburnLee.github.io/blog-2-hugo/cuda-notes/%E6%A6%82%E5%BF%B5-cta-block/</link>
      <pubDate>Sun, 31 Aug 2025 12:45:56 +0800</pubDate>
      <guid>https://ashburnLee.github.io/blog-2-hugo/cuda-notes/%E6%A6%82%E5%BF%B5-cta-block/</guid>
      <description>&lt;h2 id=&#34;cta-就是block&#34;&gt;CTA （就是Block）&lt;/h2&gt;
&lt;p&gt;cuda 中的 CTA 是什么概念？什么时候引入的？它的特点是什么？给是应用实例？&lt;/p&gt;
&lt;p&gt;CTA (Cooperative Thread Array) 是 CUDA 中的一个重要概念，它实际上就是CUDA编程模型中的线程块(Thread Block)，是逻辑上的概念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CTA 概念在CUDA早期版本就已引入，是CUDA编程模型的核心概念之一。&lt;/li&gt;
&lt;li&gt;它代表了一组可以协同工作的线程，这些线程可以共享资源并进行同步。&lt;/li&gt;
&lt;li&gt;CTA 是 CUDA 程序的任务分发单位，与编程模型中的 block 是同一事物的不同表述&lt;/li&gt;
&lt;li&gt;一个 CTA 最多可以由16个 warp 组成，即最多包含512个线程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CTA 特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;独立执行：每个CTA可以独立于其他CTA执行，没有固定的执行顺序。&lt;/li&gt;
&lt;li&gt;资源共享：CTA内的线程可以共享共享内存(Shared Memory)。&lt;/li&gt;
&lt;li&gt;同步能力：CTA内的线程可以使用同步原语（如__syncthreads()）进行同步。&lt;/li&gt;
&lt;li&gt;大小限制：一个CTA中的线程数量是有限的，通常不超过1024个。&lt;/li&gt;
&lt;li&gt;调度单位：GPU硬件调度器以CTA为单位进行调度。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
