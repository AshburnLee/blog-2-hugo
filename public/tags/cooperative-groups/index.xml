<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cooperative Groups on Junhui&#39;s Journal 2</title>
    <link>https://ashburnLee.github.io/blog-2-hugo/tags/cooperative-groups/</link>
    <description>Recent content in Cooperative Groups on Junhui&#39;s Journal 2</description>
    <generator>Hugo -- 0.149.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Aug 2025 12:45:57 +0800</lastBuildDate>
    <atom:link href="https://ashburnLee.github.io/blog-2-hugo/tags/cooperative-groups/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>概念 协作组</title>
      <link>https://ashburnLee.github.io/blog-2-hugo/cuda-notes/%E6%A6%82%E5%BF%B5-%E5%8D%8F%E4%BD%9C%E7%BB%84/</link>
      <pubDate>Sun, 31 Aug 2025 12:45:57 +0800</pubDate>
      <guid>https://ashburnLee.github.io/blog-2-hugo/cuda-notes/%E6%A6%82%E5%BF%B5-%E5%8D%8F%E4%BD%9C%E7%BB%84/</guid>
      <description>&lt;h2 id=&#34;合作组cooperative-groups&#34;&gt;合作组（Cooperative Groups）&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nvcc parallel_reduction.cu -o parallel_reduction&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例子展示了如何使用 thread_block 来同步线程块内的线程，实现高效的并行规约。&lt;/p&gt;
&lt;p&gt;这个例子是一个简单的演示，实际应用中，合作组可以用于更复杂的并行算法，例如扫描 (scan) 和排序等。 更高级的用法可能涉及到跨块同步，这需要使用更复杂的 CUDA 原语。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
